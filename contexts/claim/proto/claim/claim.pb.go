// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/claim/claim.proto

package neovencia_claims

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_claim_f69d506a0b1f600b, []int{0}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Claim struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PolicyId             string      `protobuf:"bytes,2,opt,name=policyId,proto3" json:"policyId,omitempty"`
	DateOfIncident       string      `protobuf:"bytes,3,opt,name=dateOfIncident,proto3" json:"dateOfIncident,omitempty"`
	Properties           []*Property `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Claim) Reset()         { *m = Claim{} }
func (m *Claim) String() string { return proto.CompactTextString(m) }
func (*Claim) ProtoMessage()    {}
func (*Claim) Descriptor() ([]byte, []int) {
	return fileDescriptor_claim_f69d506a0b1f600b, []int{1}
}
func (m *Claim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim.Unmarshal(m, b)
}
func (m *Claim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim.Marshal(b, m, deterministic)
}
func (dst *Claim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim.Merge(dst, src)
}
func (m *Claim) XXX_Size() int {
	return xxx_messageInfo_Claim.Size(m)
}
func (m *Claim) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim.DiscardUnknown(m)
}

var xxx_messageInfo_Claim proto.InternalMessageInfo

func (m *Claim) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Claim) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *Claim) GetDateOfIncident() string {
	if m != nil {
		return m.DateOfIncident
	}
	return ""
}

func (m *Claim) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

type Property struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}
func (*Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_claim_f69d506a0b1f600b, []int{2}
}
func (m *Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Property.Unmarshal(m, b)
}
func (m *Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Property.Marshal(b, m, deterministic)
}
func (dst *Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Property.Merge(dst, src)
}
func (m *Property) XXX_Size() int {
	return xxx_messageInfo_Property.Size(m)
}
func (m *Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Property proto.InternalMessageInfo

func (m *Property) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Property) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Adjustment struct {
	ClaimId              string   `protobuf:"bytes,1,opt,name=claimId,proto3" json:"claimId,omitempty"`
	AdjusterName         string   `protobuf:"bytes,2,opt,name=adjusterName,proto3" json:"adjusterName,omitempty"`
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Amount               float32  `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Reason               string   `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Adjustment) Reset()         { *m = Adjustment{} }
func (m *Adjustment) String() string { return proto.CompactTextString(m) }
func (*Adjustment) ProtoMessage()    {}
func (*Adjustment) Descriptor() ([]byte, []int) {
	return fileDescriptor_claim_f69d506a0b1f600b, []int{3}
}
func (m *Adjustment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Adjustment.Unmarshal(m, b)
}
func (m *Adjustment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Adjustment.Marshal(b, m, deterministic)
}
func (dst *Adjustment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Adjustment.Merge(dst, src)
}
func (m *Adjustment) XXX_Size() int {
	return xxx_messageInfo_Adjustment.Size(m)
}
func (m *Adjustment) XXX_DiscardUnknown() {
	xxx_messageInfo_Adjustment.DiscardUnknown(m)
}

var xxx_messageInfo_Adjustment proto.InternalMessageInfo

func (m *Adjustment) GetClaimId() string {
	if m != nil {
		return m.ClaimId
	}
	return ""
}

func (m *Adjustment) GetAdjusterName() string {
	if m != nil {
		return m.AdjusterName
	}
	return ""
}

func (m *Adjustment) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Adjustment) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Adjustment) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type Estimate struct {
	Property             *Property `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	EstimatorName        string    `protobuf:"bytes,2,opt,name=estimatorName,proto3" json:"estimatorName,omitempty"`
	Date                 string    `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Amount               float32   `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Notes                string    `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Estimate) Reset()         { *m = Estimate{} }
func (m *Estimate) String() string { return proto.CompactTextString(m) }
func (*Estimate) ProtoMessage()    {}
func (*Estimate) Descriptor() ([]byte, []int) {
	return fileDescriptor_claim_f69d506a0b1f600b, []int{4}
}
func (m *Estimate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Estimate.Unmarshal(m, b)
}
func (m *Estimate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Estimate.Marshal(b, m, deterministic)
}
func (dst *Estimate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Estimate.Merge(dst, src)
}
func (m *Estimate) XXX_Size() int {
	return xxx_messageInfo_Estimate.Size(m)
}
func (m *Estimate) XXX_DiscardUnknown() {
	xxx_messageInfo_Estimate.DiscardUnknown(m)
}

var xxx_messageInfo_Estimate proto.InternalMessageInfo

func (m *Estimate) GetProperty() *Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *Estimate) GetEstimatorName() string {
	if m != nil {
		return m.EstimatorName
	}
	return ""
}

func (m *Estimate) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Estimate) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Estimate) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type Response struct {
	Claim                *Claim        `protobuf:"bytes,1,opt,name=claim,proto3" json:"claim,omitempty"`
	Adjustments          []*Adjustment `protobuf:"bytes,2,rep,name=adjustments,proto3" json:"adjustments,omitempty"`
	Estimates            []*Estimate   `protobuf:"bytes,3,rep,name=estimates,proto3" json:"estimates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_claim_f69d506a0b1f600b, []int{5}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetClaim() *Claim {
	if m != nil {
		return m.Claim
	}
	return nil
}

func (m *Response) GetAdjustments() []*Adjustment {
	if m != nil {
		return m.Adjustments
	}
	return nil
}

func (m *Response) GetEstimates() []*Estimate {
	if m != nil {
		return m.Estimates
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "neovencia.claims.GetRequest")
	proto.RegisterType((*Claim)(nil), "neovencia.claims.Claim")
	proto.RegisterType((*Property)(nil), "neovencia.claims.Property")
	proto.RegisterType((*Adjustment)(nil), "neovencia.claims.Adjustment")
	proto.RegisterType((*Estimate)(nil), "neovencia.claims.Estimate")
	proto.RegisterType((*Response)(nil), "neovencia.claims.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ClaimsService service

type ClaimsServiceClient interface {
	FileClaim(ctx context.Context, in *Claim, opts ...client.CallOption) (*Response, error)
	ClaimStatus(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
	AdjustClaim(ctx context.Context, in *Adjustment, opts ...client.CallOption) (*Response, error)
	SumbitEstimate(ctx context.Context, in *Estimate, opts ...client.CallOption) (*Response, error)
	IssuePayment(ctx context.Context, in *Claim, opts ...client.CallOption) (*Response, error)
}

type claimsServiceClient struct {
	c           client.Client
	serviceName string
}

func NewClaimsServiceClient(serviceName string, c client.Client) ClaimsServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "neovencia.claims"
	}
	return &claimsServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *claimsServiceClient) FileClaim(ctx context.Context, in *Claim, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ClaimsService.FileClaim", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *claimsServiceClient) ClaimStatus(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ClaimsService.ClaimStatus", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *claimsServiceClient) AdjustClaim(ctx context.Context, in *Adjustment, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ClaimsService.AdjustClaim", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *claimsServiceClient) SumbitEstimate(ctx context.Context, in *Estimate, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ClaimsService.SumbitEstimate", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *claimsServiceClient) IssuePayment(ctx context.Context, in *Claim, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ClaimsService.IssuePayment", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClaimsService service

type ClaimsServiceHandler interface {
	FileClaim(context.Context, *Claim, *Response) error
	ClaimStatus(context.Context, *GetRequest, *Response) error
	AdjustClaim(context.Context, *Adjustment, *Response) error
	SumbitEstimate(context.Context, *Estimate, *Response) error
	IssuePayment(context.Context, *Claim, *Response) error
}

func RegisterClaimsServiceHandler(s server.Server, hdlr ClaimsServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ClaimsService{hdlr}, opts...))
}

type ClaimsService struct {
	ClaimsServiceHandler
}

func (h *ClaimsService) FileClaim(ctx context.Context, in *Claim, out *Response) error {
	return h.ClaimsServiceHandler.FileClaim(ctx, in, out)
}

func (h *ClaimsService) ClaimStatus(ctx context.Context, in *GetRequest, out *Response) error {
	return h.ClaimsServiceHandler.ClaimStatus(ctx, in, out)
}

func (h *ClaimsService) AdjustClaim(ctx context.Context, in *Adjustment, out *Response) error {
	return h.ClaimsServiceHandler.AdjustClaim(ctx, in, out)
}

func (h *ClaimsService) SumbitEstimate(ctx context.Context, in *Estimate, out *Response) error {
	return h.ClaimsServiceHandler.SumbitEstimate(ctx, in, out)
}

func (h *ClaimsService) IssuePayment(ctx context.Context, in *Claim, out *Response) error {
	return h.ClaimsServiceHandler.IssuePayment(ctx, in, out)
}

func init() { proto.RegisterFile("proto/claim/claim.proto", fileDescriptor_claim_f69d506a0b1f600b) }

var fileDescriptor_claim_f69d506a0b1f600b = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0x4d, 0xda, 0xae, 0xe9, 0x69, 0xb7, 0xc8, 0x20, 0xee, 0x50, 0xbc, 0x28, 0x41, 0xa4,
	0x37, 0x56, 0x58, 0x41, 0xc4, 0x0b, 0xf1, 0x0f, 0xab, 0xc4, 0x0b, 0x5d, 0xd2, 0x27, 0x98, 0x4d,
	0x8e, 0x30, 0xd2, 0xcc, 0xc4, 0xcc, 0x64, 0xa1, 0x2f, 0xe1, 0xad, 0xef, 0xe0, 0xad, 0xaf, 0xe7,
	0x85, 0xe4, 0xcc, 0xa4, 0xcd, 0xfe, 0x69, 0x8b, 0x7b, 0x53, 0x72, 0xbe, 0x7e, 0x73, 0xf2, 0xfb,
	0x4e, 0x4e, 0x02, 0x27, 0x65, 0xa5, 0xad, 0x7e, 0x9e, 0xad, 0x84, 0x2c, 0xdc, 0xef, 0x82, 0x14,
	0xf6, 0x40, 0xa1, 0xbe, 0x44, 0x95, 0x49, 0xb1, 0x20, 0xd9, 0xc4, 0x63, 0x80, 0x4f, 0x68, 0x53,
	0xfc, 0x51, 0xa3, 0xb1, 0xf1, 0xaf, 0x00, 0x06, 0x1f, 0x9a, 0x3f, 0xd8, 0x04, 0x42, 0x99, 0xf3,
	0x60, 0x16, 0xcc, 0x87, 0x69, 0x28, 0x73, 0x36, 0x85, 0xa8, 0xd4, 0x2b, 0x99, 0xad, 0x93, 0x9c,
	0x87, 0xa4, 0x6e, 0x6a, 0xf6, 0x14, 0x26, 0xb9, 0xb0, 0xf8, 0xf5, 0x5b, 0xa2, 0x32, 0x99, 0xa3,
	0xb2, 0xbc, 0x47, 0x8e, 0x6b, 0x2a, 0x7b, 0x0d, 0x50, 0x56, 0xba, 0xc4, 0xca, 0x4a, 0x34, 0xbc,
	0x3f, 0xeb, 0xcd, 0x47, 0xa7, 0xd3, 0xc5, 0x75, 0xa4, 0xc5, 0xb9, 0xf3, 0xac, 0xd3, 0x8e, 0x3b,
	0x7e, 0x0b, 0x51, 0xab, 0x33, 0x06, 0x7d, 0x25, 0x0a, 0xf4, 0x74, 0x74, 0xcd, 0x66, 0x30, 0xca,
	0xd1, 0x64, 0x95, 0x2c, 0xad, 0xd4, 0xca, 0x23, 0x76, 0xa5, 0xf8, 0x67, 0x00, 0xf0, 0x2e, 0xff,
	0x5e, 0x1b, 0x5b, 0x34, 0x30, 0x1c, 0xee, 0xd3, 0xfd, 0x92, 0x36, 0x65, 0x5b, 0xb2, 0x18, 0xc6,
	0x82, 0x7c, 0x58, 0x7d, 0x69, 0x6e, 0xe3, 0x7a, 0x5d, 0xd1, 0x1a, 0x84, 0x26, 0x9c, 0x0f, 0x4a,
	0xd7, 0xec, 0x11, 0x1c, 0x89, 0x42, 0xd7, 0xca, 0xf2, 0xfe, 0x2c, 0x98, 0x87, 0xa9, 0xaf, 0x1a,
	0xbd, 0x42, 0x61, 0xb4, 0xe2, 0x03, 0x72, 0xfb, 0x2a, 0xfe, 0x1d, 0x40, 0x74, 0x66, 0xac, 0x2c,
	0x9a, 0xc3, 0x2f, 0x21, 0xf2, 0x69, 0xd7, 0xc4, 0xb3, 0x7f, 0x32, 0x1b, 0x2f, 0x7b, 0x02, 0xc7,
	0xe8, 0x7a, 0xe8, 0x2e, 0xed, 0x55, 0xf1, 0xbf, 0x70, 0x1f, 0xc2, 0x40, 0x69, 0x8b, 0xc6, 0xd3,
	0xba, 0x22, 0xfe, 0x13, 0x40, 0x94, 0xa2, 0x29, 0xb5, 0x32, 0xc8, 0x9e, 0xc1, 0x80, 0x88, 0x3c,
	0xe9, 0xc9, 0x4d, 0x52, 0x5a, 0xa2, 0xd4, 0xb9, 0xd8, 0x1b, 0x18, 0x89, 0xcd, 0xe0, 0x0d, 0x0f,
	0xe9, 0xc1, 0x3f, 0xbe, 0x79, 0x68, 0xfb, 0x74, 0xd2, 0xee, 0x01, 0xf6, 0x0a, 0x86, 0x3e, 0x0e,
	0x1a, 0xde, 0xdb, 0xb5, 0x36, 0xed, 0x28, 0xd3, 0xad, 0xf9, 0xf4, 0x6f, 0x08, 0xc7, 0x84, 0x62,
	0x96, 0x58, 0x5d, 0xca, 0x0c, 0xd9, 0x7b, 0x18, 0x7e, 0x94, 0x2b, 0x74, 0x4b, 0xbe, 0x0b, 0x7c,
	0x7a, 0x4b, 0xfb, 0x36, 0x7c, 0x7c, 0x8f, 0x25, 0x30, 0x22, 0xdb, 0xd2, 0x0a, 0x5b, 0x1b, 0x76,
	0x4b, 0x92, 0xed, 0x2b, 0x75, 0xb8, 0x95, 0x4b, 0xed, 0x80, 0xf6, 0x0e, 0xe5, 0x40, 0xab, 0xcf,
	0x30, 0x59, 0xd6, 0xc5, 0x85, 0xb4, 0x9b, 0x9d, 0xda, 0x33, 0xa4, 0x03, 0xbd, 0xce, 0x60, 0x9c,
	0x18, 0x53, 0xe3, 0xb9, 0x58, 0xd3, 0xcb, 0x72, 0xb7, 0x41, 0x5d, 0x1c, 0xd1, 0x57, 0xe7, 0xc5,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0xdd, 0x79, 0x34, 0x90, 0x04, 0x00, 0x00,
}
