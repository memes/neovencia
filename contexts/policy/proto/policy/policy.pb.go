// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/policy/policy.proto

package neovencia_policy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_policy_0c7abf94a920fb4c, []int{0}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Policy struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	StartDate            string   `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate              string   `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Amount               float32  `protobuf:"fixed32,5,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_policy_0c7abf94a920fb4c, []int{1}
}
func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (dst *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(dst, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Policy) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Policy) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *Policy) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *Policy) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Response struct {
	Policy               *Policy   `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	Policies             []*Policy `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_policy_0c7abf94a920fb4c, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *Response) GetPolicies() []*Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "neovencia.policy.GetRequest")
	proto.RegisterType((*Policy)(nil), "neovencia.policy.Policy")
	proto.RegisterType((*Response)(nil), "neovencia.policy.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for PolicyService service

type PolicyServiceClient interface {
	InitiatePolicy(ctx context.Context, in *Policy, opts ...client.CallOption) (*Response, error)
	GetPolicy(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
}

type policyServiceClient struct {
	c           client.Client
	serviceName string
}

func NewPolicyServiceClient(serviceName string, c client.Client) PolicyServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "neovencia.policy"
	}
	return &policyServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *policyServiceClient) InitiatePolicy(ctx context.Context, in *Policy, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PolicyService.InitiatePolicy", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policyServiceClient) GetPolicy(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "PolicyService.GetPolicy", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PolicyService service

type PolicyServiceHandler interface {
	InitiatePolicy(context.Context, *Policy, *Response) error
	GetPolicy(context.Context, *GetRequest, *Response) error
}

func RegisterPolicyServiceHandler(s server.Server, hdlr PolicyServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&PolicyService{hdlr}, opts...))
}

type PolicyService struct {
	PolicyServiceHandler
}

func (h *PolicyService) InitiatePolicy(ctx context.Context, in *Policy, out *Response) error {
	return h.PolicyServiceHandler.InitiatePolicy(ctx, in, out)
}

func (h *PolicyService) GetPolicy(ctx context.Context, in *GetRequest, out *Response) error {
	return h.PolicyServiceHandler.GetPolicy(ctx, in, out)
}

func init() { proto.RegisterFile("proto/policy/policy.proto", fileDescriptor_policy_0c7abf94a920fb4c) }

var fileDescriptor_policy_0c7abf94a920fb4c = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x5a, 0x63, 0x32, 0x6a, 0x91, 0x39, 0xc8, 0xb6, 0x28, 0x84, 0x9c, 0x7a, 0x8a,
	0x52, 0x7d, 0x04, 0x21, 0x7a, 0x93, 0xf8, 0x00, 0xb2, 0x26, 0x73, 0x58, 0xd0, 0xdd, 0x98, 0x9d,
	0x16, 0x7a, 0xf1, 0x61, 0x7c, 0x52, 0x61, 0x76, 0x55, 0xb0, 0xd8, 0x53, 0x26, 0xdf, 0xff, 0xef,
	0xcf, 0xbf, 0xb3, 0x30, 0x1f, 0x46, 0xc7, 0xee, 0x6a, 0x70, 0xaf, 0xa6, 0xdb, 0xc6, 0x4f, 0x2d,
	0x0c, 0xcf, 0x2c, 0xb9, 0x0d, 0xd9, 0xce, 0xe8, 0x3a, 0xf0, 0xea, 0x04, 0xa0, 0x21, 0x6e, 0xe9,
	0x7d, 0x4d, 0x9e, 0xab, 0x0f, 0xc8, 0x1e, 0x85, 0xe3, 0x0c, 0x52, 0xd3, 0xab, 0xa4, 0x4c, 0x96,
	0x45, 0x9b, 0x9a, 0x1e, 0x11, 0xa6, 0xbc, 0x1d, 0x48, 0xa5, 0x42, 0x64, 0xc6, 0x4b, 0x00, 0xcf,
	0x7a, 0xe4, 0xe7, 0x5e, 0x33, 0xa9, 0x89, 0x28, 0x85, 0x90, 0x3b, 0xcd, 0x84, 0x73, 0xc8, 0xc9,
	0xf6, 0x41, 0x9c, 0x8a, 0x78, 0x44, 0xb6, 0x17, 0xe9, 0x1c, 0x32, 0xfd, 0xe6, 0xd6, 0x96, 0xd5,
	0x61, 0x99, 0x2c, 0xd3, 0x36, 0xfe, 0x55, 0x23, 0xe4, 0x2d, 0xf9, 0xc1, 0x59, 0x4f, 0x78, 0x0d,
	0x59, 0xe8, 0x28, 0x2d, 0x8e, 0x57, 0xaa, 0xfe, 0x5b, 0xbe, 0x0e, 0x5d, 0xdb, 0xe8, 0xc3, 0x5b,
	0xc8, 0x65, 0x32, 0xe4, 0x55, 0x5a, 0x4e, 0xf6, 0x9e, 0xf9, 0x71, 0xae, 0x3e, 0x13, 0x38, 0x0d,
	0xf0, 0x89, 0xc6, 0x8d, 0xe9, 0x08, 0xef, 0x61, 0xf6, 0x60, 0x0d, 0x1b, 0xcd, 0x14, 0xb7, 0xf1,
	0x6f, 0xce, 0x62, 0xb1, 0xab, 0x7c, 0xdf, 0xa0, 0x3a, 0xc0, 0x06, 0x8a, 0x86, 0x38, 0x86, 0x5c,
	0xec, 0x5a, 0x7f, 0x57, 0xbf, 0x3f, 0xe8, 0x25, 0x93, 0xf7, 0xbb, 0xf9, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0xfc, 0x93, 0xd7, 0xed, 0xdc, 0x01, 0x00, 0x00,
}
